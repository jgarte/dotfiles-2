hue_to_ansi256() {
    # map hue (from 0-1536) to saturated ansi256 color
    h=$1

    s=180

    n=$(( ((h)/256)%6 ))

    x=$((h%256))
    y=$((256-x))

    x=$((x*128/256))
    y=$((y*128/256))

    r=$(( (n==0? s   :(n==1? y   :(n==2? 0   :(n==3? 0   :(n==4? x   :(n==5? s   :0)))))) ))
    g=$(( (n==0? x   :(n==1? s   :(n==2? s   :(n==3? y   :(n==4? 0   :(n==5? 0   :0)))))) ))
    b=$(( (n==0? 0   :(n==1? 0   :(n==2? x   :(n==3? s   :(n==4? s   :(n==5? y   :0)))))) ))

    printf "%3d" $(((r<75?0:(r-35)/40)*6*6+(g<75?0:(g-35)/40)*6+(b<75?0:(b-35)/40)+16))
}

if [[ -e /usr/lib/git-core/git-sh-prompt ]]; then
    . /usr/lib/git-core/git-sh-prompt
    PS1_GIT="\$(__git_ps1)"
fi

strToColor() {
  echo "$(hue_to_ansi256 $(( $(cksum <<< ${1} | cut -f 1 -d ' ') % 1280 + 128)))"
}

HOST_KEY_COLOR="$(strToColor $(hostname))"

build_prompt() {
  section() {
    FG=$1
    BG=$2

    if [ -n "$PREV_BG" ]; then
      PS1+="\[$(tput setaf $PREV_BG)$(tput setab $BG)\] "
    fi

    PS1+="\[$(tput setaf $FG)$(tput setab $BG)\]$3"

    PREV_BG="$BG"
  }

  PREV_BG=""
  PS1=""

  if [ -n "${TMUX}" ] ; then
      section 255 ${HOST_KEY_COLOR} ""
  else
      section 255 ${HOST_KEY_COLOR} "\u@\h"
  fi

  GIT_BRANCH="$(__git_ps1 '%s')"

  if [[ -n "${GIT_BRANCH}" ]]; then
    VCS_ROOT="$(git rev-parse --show-toplevel)"
    section 15 245 "${VCS_ROOT##*/}  ${GIT_BRANCH}"
    section 15 238 ".${PWD/$VCS_ROOT/}"
  else
    section 15 238 "\W"
  fi

  PS1+="\[$(tput sgr0)$(tput setaf $PREV_BG)\]\[$(tput sgr0)\] "
}

PROMPT_COMMAND="build_prompt"
